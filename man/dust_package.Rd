% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package.R
\name{dust_package}
\alias{dust_package}
\title{Create dust system in package}
\usage{
dust_package(path, quiet = FALSE)
}
\arguments{
\item{path}{Path to the package}

\item{quiet}{Passed to \code{cpp11::cpp_register}, if \code{TRUE} suppresses
informational notices about updates to the cpp11 files}
}
\value{
Nothing, this function is called for its side effects
}
\description{
Creates or updates the generated code for a set of dust systems in
a package. The user-provided code is assumed to be in \code{inst/dust}
as a series of C++ files; a file \code{inst/dust/x.cpp} will be
transformed into a file \code{src/x.cpp}.
}
\details{
Classes used within a package must be distinct; typically these
will match the filenames.

We add "cpp11 attributes" to the created functions, and will run
\code{\link[cpp11:cpp_register]{cpp11::cpp_register()}} on them once the generated code
has been created.

Your package needs a \code{src/Makevars} file to enable OpenMP (if your
system supports it). If it is not present then a suitable Makevars
will be written, containing

\if{html}{\out{<div class="sourceCode">}}\preformatted{PKG_CXXFLAGS=$(SHLIB_OPENMP_CXXFLAGS)
PKG_LIBS=$(SHLIB_OPENMP_CXXFLAGS)
}\if{html}{\out{</div>}}

following "Writing R Extensions" (see section "OpenMP support").
If your package does contain a \code{src/Makevars} file we do not
attempt to edit it but will error if it looks like it does not
contain these lines or similar.

You also need to make sure that your package loads the dynamic
library; if you are using roxygen, then you might create a file
(say, \code{R/zzz.R}) containing

\if{html}{\out{<div class="sourceCode">}}\preformatted{#' @useDynLib packagename, .registration = TRUE
NULL
}\if{html}{\out{</div>}}

substituting \code{packagename} for your package name as
appropriate. This will create an entry in \code{NAMESPACE}.
}
