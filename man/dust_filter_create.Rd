% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interface-filter.R
\name{dust_filter_create}
\alias{dust_filter_create}
\title{Create a particle filter}
\usage{
dust_filter_create(
  generator,
  time_start,
  time,
  data,
  n_particles,
  n_groups = 0,
  n_threads = 1,
  dt = 1,
  index = NULL,
  seed = NULL
)
}
\arguments{
\item{generator}{A system generator object, with class
\code{dust_system_generator}.  The system must support \code{compare_data}
to be used with this function.}

\item{time_start}{The start time for the simulation - this is
typically before the first data point.  Must be an integer-like
value.}

\item{time}{A vector of times, each of which has a corresponding
entry in \code{data}.  The system will stop at each of these times to
compute the likelihood using the compare function.}

\item{data}{The data to compare against.  This must be a list with
the same length as \code{time}, each element of which corresponds to
the data required for the system.  If the system is ungrouped then
each element of \code{data} is a list with elements corresponding to
whatever your system requires.  If your system is grouped, this
should be a list with as many elements as your system has groups,
with each element corresponding to the data your system requires.
We will likely introduce a friendlier data.frame based input
soon.}

\item{n_particles}{The number of particles to run.  Larger numbers
will give lower variance in the likelihood estimate but run more
slowly.}

\item{n_groups}{Optionally, the number of parameter groups}

\item{n_threads}{Integer, the number of threads to use in
parallelisable calculations.  See Details.}

\item{dt}{The time step for discrete time systems, defaults to 1
if not given.  It is an error to provide a non-NULL argument
with continuous-time systems.}

\item{index}{An optional index of states to extract.  If given,
then we subset the system state on return.  You can use this to
return fewer system states than the system ran with, to reorder
states, or to name them on exit (names present on the index will
be copied into the rownames of the returned array).}

\item{seed}{Optionally, a seed.  Otherwise we respond to R's RNG seed on
initialisation.}
}
\value{
A \code{dust_unfilter} object, which can be used with
\link{dust_unfilter_run}
}
\description{
Create a particle filter object
}
